#
# Copyright 2007-2015, Kaazing Corporation. All rights reserved.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

property destinationInitial ${streams:map("target/nukleus-itests/destination/streams/ws", 1024 * 1024)}
property destinationReply ${streams:map("target/nukleus-itests/ws/streams/destination", 1024 * 1024)}

property newDestinationStreamId ${streams:newReplyStreamId()}

connect await BOUND
        agrona://stream/bidirectional
        option reader ${agrona:manyToOneReader(destinationInitial.buffer)}
        option writer ${agrona:manyToOneWriter(destinationReply.buffer)}
connected

read [0x00 0x00 0x00 0x01]
read ([0..8]:initialStreamId)
read ([0..8]:destinationRef)

write [0x00 0x00 0x00 0x01]
write ${newDestinationStreamId}
write ${initialStreamId}
write flush

read [0x00 0x00 0x00 0x02]
read ${initialStreamId}
read ([0..125] :server125)

write [0x00 0x00 0x00 0x02]
write ${newDestinationStreamId}
write ${server125}
write flush

close
closed
